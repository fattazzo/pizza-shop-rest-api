/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.fattazzo.pizzashop.controller.api;

import com.fattazzo.pizzashop.model.api.ErrorResponse;
import com.fattazzo.pizzashop.model.api.Session;
import com.fattazzo.pizzashop.model.api.UserLogin;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@Api(value = "Session", description = "the Session API")
public interface SessionApi {

    @ApiOperation(value = "Create a session", nickname = "login", notes = "Create a `Session` information", response = Session.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "session", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Login successfull", response = Session.class),
        @ApiResponse(code = 401, message = "Username or password not valid"),
        @ApiResponse(code = 403, message = "User not active", response = ErrorResponse.class) })
    @RequestMapping(value = "/public/session",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Session> login(@ApiParam(value = "Login user information" ,required=true )  @Valid @RequestBody UserLogin body
);


    @ApiOperation(value = "Create new session", nickname = "refreshToken", notes = "Create new `Session` with a valid access token", response = Session.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "session", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "New session", response = Session.class),
        @ApiResponse(code = 400, message = "Response failed", response = ErrorResponse.class) })
    @RequestMapping(value = "/public/session/refresh/{refreshToken}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Session> refreshToken(@ApiParam(value = "Refresh token used for retrieve new updated session information",required=true) @PathVariable("refreshToken") String refreshToken
);

}
