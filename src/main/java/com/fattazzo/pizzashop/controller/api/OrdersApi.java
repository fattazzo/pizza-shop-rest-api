/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.fattazzo.pizzashop.controller.api;

import com.fattazzo.pizzashop.model.api.ErrorResponse;
import com.fattazzo.pizzashop.model.api.OrderDetails;
import com.fattazzo.pizzashop.model.api.OrderRequest;
import com.fattazzo.pizzashop.model.api.OrderSearchParameters;
import com.fattazzo.pizzashop.model.api.OrderSearchResult;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@Api(value = "Orders", description = "the Orders API")
public interface OrdersApi {

    Logger log = LoggerFactory.getLogger(OrdersApi.class);

    default Optional<ObjectMapper> getObjectMapper(){
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest(){
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Create a Order", nickname = "createOrder", notes = "Creates a new instance of a `Order`.", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful response.") })
    @RequestMapping(value = "/orders",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> createOrder(@ApiParam(value = "A new `Order` to be created." ,required=true )  @Valid @RequestBody OrderRequest body
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete a Order", nickname = "deleteOrder", notes = "Deletes an existing `Order`.", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Successful response.") })
    @RequestMapping(value = "/orders/{orderId}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteOrder(@ApiParam(value = "A unique identifier for a `Order`.",required=true) @PathVariable("orderId") Integer orderId
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Get a Order", nickname = "getOrder", notes = "Gets the details of a single instance of a `OrderDetails`.", response = OrderDetails.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response - returns a single `OrderDetails`.", response = OrderDetails.class) })
    @RequestMapping(value = "/orders/{orderId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<OrderDetails> getOrder(@ApiParam(value = "A unique identifier for a `Order`.",required=true) @PathVariable("orderId") Integer orderId
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"lines\" : [ {\n    \"pizzaDough\" : {\n      \"extra\" : 5.962133916683182,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"enabled\" : true,\n      \"order\" : 5\n    },\n    \"item\" : {\n      \"availablePrices\" : [ 6.027456183070403, 6.027456183070403 ],\n      \"imageUrl\" : \"imageUrl\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 0,\n      \"category\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"type\" : \"PIZZA\",\n        \"enabled\" : true,\n        \"order\" : 6\n      },\n      \"enabled\" : true\n    },\n    \"total\" : 1.4658129805029452,\n    \"quantity\" : 6,\n    \"pizzaToppingExtras\" : [ {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    }, {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    } ],\n    \"customerNote\" : \"customerNote\",\n    \"id\" : 0,\n    \"pizzaPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      }\n    },\n    \"productPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variation\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"enabled\" : true,\n        \"order\" : 6\n      }\n    }\n  }, {\n    \"pizzaDough\" : {\n      \"extra\" : 5.962133916683182,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"enabled\" : true,\n      \"order\" : 5\n    },\n    \"item\" : {\n      \"availablePrices\" : [ 6.027456183070403, 6.027456183070403 ],\n      \"imageUrl\" : \"imageUrl\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 0,\n      \"category\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"type\" : \"PIZZA\",\n        \"enabled\" : true,\n        \"order\" : 6\n      },\n      \"enabled\" : true\n    },\n    \"total\" : 1.4658129805029452,\n    \"quantity\" : 6,\n    \"pizzaToppingExtras\" : [ {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    }, {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    } ],\n    \"customerNote\" : \"customerNote\",\n    \"id\" : 0,\n    \"pizzaPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      }\n    },\n    \"productPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variation\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"enabled\" : true,\n        \"order\" : 6\n      }\n    }\n  } ],\n  \"branch\" : {\n    \"id\" : 1,\n    \"phone\" : \"XXX XXXXXXX\",\n    \"webUrl\" : \"www.pizzashop.example/branch1\",\n    \"primary\" : true,\n    \"enabled\" : true,\n    \"address\" : {\n      \"streetAddress\" : \"some text\",\n      \"number\" : \"some text\",\n      \"place\" : \"some text\",\n      \"postalCode\" : \"some text\"\n    }\n  }\n}", OrderDetails.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "", nickname = "searchOrders", notes = "", response = OrderSearchResult.class, responseContainer = "List", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of `Order` entities", response = OrderSearchResult.class, responseContainer = "List") })
    @RequestMapping(value = "/orders/search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<List<OrderSearchResult>> searchOrders(@ApiParam(value = "" ,required=true )  @Valid @RequestBody OrderSearchParameters body
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {\n  \"dateCreation\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"shippingMethod\" : \"shippingMethod\",\n  \"shippingType\" : \"DELIVERY_TO_HOME\",\n  \"backofficeNote\" : \"backofficeNote\",\n  \"deliveryAddressPostalCode\" : \"deliveryAddressPostalCode\",\n  \"dateRequest\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"dateRequestConfirmed\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"transactionId\" : \"transactionId\",\n  \"total\" : 6.027456183070403,\n  \"customerUserName\" : \"customerUserName\",\n  \"customerNote\" : \"customerNote\",\n  \"deliveryAddressStreet\" : \"deliveryAddressStreet\",\n  \"id\" : 0,\n  \"state\" : \"PENDING\",\n  \"deliveryAddressPlace\" : \"deliveryAddressPlace\",\n  \"deliveryAddressNumber\" : \"deliveryAddressNumber\"\n}, {\n  \"dateCreation\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"shippingMethod\" : \"shippingMethod\",\n  \"shippingType\" : \"DELIVERY_TO_HOME\",\n  \"backofficeNote\" : \"backofficeNote\",\n  \"deliveryAddressPostalCode\" : \"deliveryAddressPostalCode\",\n  \"dateRequest\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"dateRequestConfirmed\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"transactionId\" : \"transactionId\",\n  \"total\" : 6.027456183070403,\n  \"customerUserName\" : \"customerUserName\",\n  \"customerNote\" : \"customerNote\",\n  \"deliveryAddressStreet\" : \"deliveryAddressStreet\",\n  \"id\" : 0,\n  \"state\" : \"PENDING\",\n  \"deliveryAddressPlace\" : \"deliveryAddressPlace\",\n  \"deliveryAddressNumber\" : \"deliveryAddressNumber\"\n} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update a Order", nickname = "updateOrder", notes = "Updates an existing `OrderDetails`.", response = OrderDetails.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Successful response.", response = OrderDetails.class) })
    @RequestMapping(value = "/orders/{orderId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<OrderDetails> updateOrder(@ApiParam(value = "Updated `OrderDetails` information." ,required=true )  @Valid @RequestBody OrderDetails body
,@ApiParam(value = "A unique identifier for a `Order`.",required=true) @PathVariable("orderId") Integer orderId
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{\n  \"lines\" : [ {\n    \"pizzaDough\" : {\n      \"extra\" : 5.962133916683182,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"enabled\" : true,\n      \"order\" : 5\n    },\n    \"item\" : {\n      \"availablePrices\" : [ 6.027456183070403, 6.027456183070403 ],\n      \"imageUrl\" : \"imageUrl\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 0,\n      \"category\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"type\" : \"PIZZA\",\n        \"enabled\" : true,\n        \"order\" : 6\n      },\n      \"enabled\" : true\n    },\n    \"total\" : 1.4658129805029452,\n    \"quantity\" : 6,\n    \"pizzaToppingExtras\" : [ {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    }, {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    } ],\n    \"customerNote\" : \"customerNote\",\n    \"id\" : 0,\n    \"pizzaPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      }\n    },\n    \"productPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variation\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"enabled\" : true,\n        \"order\" : 6\n      }\n    }\n  }, {\n    \"pizzaDough\" : {\n      \"extra\" : 5.962133916683182,\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 1,\n      \"enabled\" : true,\n      \"order\" : 5\n    },\n    \"item\" : {\n      \"availablePrices\" : [ 6.027456183070403, 6.027456183070403 ],\n      \"imageUrl\" : \"imageUrl\",\n      \"name\" : \"name\",\n      \"description\" : \"description\",\n      \"id\" : 0,\n      \"category\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"type\" : \"PIZZA\",\n        \"enabled\" : true,\n        \"order\" : 6\n      },\n      \"enabled\" : true\n    },\n    \"total\" : 1.4658129805029452,\n    \"quantity\" : 6,\n    \"pizzaToppingExtras\" : [ {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    }, {\n      \"extra\" : 2.3021358869347655,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      },\n      \"topping\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 6,\n        \"enabled\" : true\n      },\n      \"dough\" : {\n        \"extra\" : 5.962133916683182,\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 1,\n        \"enabled\" : true,\n        \"order\" : 5\n      },\n      \"enabled\" : true\n    } ],\n    \"customerNote\" : \"customerNote\",\n    \"id\" : 0,\n    \"pizzaPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variationSize\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 7,\n        \"enabled\" : true,\n        \"order\" : 9\n      }\n    },\n    \"productPrice\" : {\n      \"price\" : 6.027456183070403,\n      \"id\" : 0,\n      \"variation\" : {\n        \"name\" : \"name\",\n        \"description\" : \"description\",\n        \"id\" : 0,\n        \"enabled\" : true,\n        \"order\" : 6\n      }\n    }\n  } ],\n  \"branch\" : {\n    \"id\" : 1,\n    \"phone\" : \"XXX XXXXXXX\",\n    \"webUrl\" : \"www.pizzashop.example/branch1\",\n    \"primary\" : true,\n    \"enabled\" : true,\n    \"address\" : {\n      \"streetAddress\" : \"some text\",\n      \"number\" : \"some text\",\n      \"place\" : \"some text\",\n      \"postalCode\" : \"some text\"\n    }\n  }\n}", OrderDetails.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Validate an Order", nickname = "validateOrder", notes = "Performe an `Order` validation.", authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "orders", })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "The `Order` is valid."),
        @ApiResponse(code = 400, message = "The `Order` is not valid.", response = ErrorResponse.class) })
    @RequestMapping(value = "/orders/validate",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> validateOrder(@ApiParam(value = "`Order` to be validate." ,required=true )  @Valid @RequestBody OrderRequest body
,@ApiParam(value = "", defaultValue = "false") @Valid @RequestParam(value = "validateTransactionId", required = false, defaultValue="false") Boolean validateTransactionId
) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default OrdersApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
