/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.fattazzo.pizzashop.controller.api;

import com.fattazzo.pizzashop.model.api.Settings;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-04-25T15:30:26.294Z[GMT]")
@Api(value = "settings", description = "the settings API")
public interface SettingsApi {

    @ApiOperation(value = "Get a Settings", nickname = "getSettings", notes = "Gets the details of a single instance of a `Settings`.", response = Settings.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "settings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response - returns a single `Settings`.", response = Settings.class) })
    @RequestMapping(value = "/settings/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Settings> getSettings();


    @ApiOperation(value = "Update a Settings", nickname = "updateSettings", notes = "Updates an existing `Settings`.", response = Settings.class, authorizations = {
        @Authorization(value = "BearerAuth")    }, tags={ "settings", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response.", response = Settings.class) })
    @RequestMapping(value = "/settings/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Settings> updateSettings(@ApiParam(value = "Updated `Settings` information." ,required=true )  @Valid @RequestBody Settings body
);

}
