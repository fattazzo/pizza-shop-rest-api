spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username= ${JDBC_DATABASE_USERNAME}
spring.datasource.password= ${JDBC_DATABASE_PASSWORD}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=false
#Header in cui il backend si aspetta il token
jwt.accessToken.name: Authorization
#periodo di validita del token(s) 7200=2h
jwt.accessToken.expiration: 7200
jwt.refreshToken.name: x-refresh-token
#periodo di validita del refresh token(s) 1 year
jwt.refreshToken.expiration: 31536000
#chiave segreta utilizzata da jwt
jwt.secret: mySecret
#periodo di validita del token(s) 7200=2h
jwt.expiration: 7200


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNANE}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
#minutes
registration.expiration= 1440
registration.confirmUrl=https://mybudgetfin.herokuapp.com/public/v1/confirm-registration?token=

logging.level.root=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
